{"mappings":"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","sources":["public/js/index.js","public/js/mapbox.js","public/js/updateSettings.js","public/js/alert.js","public/js/stripe.js","public/js/login.js"],"sourcesContent":["// import '@babel/polyfill';\n// require('@babel/preset-env');\nimport { displayMap } from './mapbox.js'; // Assuming the file is 'mapbox.js'\nimport { updateSettings } from './updateSettings.js'; // Assuming the file is 'updateSettings.js'\nimport { bookTour } from './stripe.js';\nimport { login, logout } from './login.js'; // Assuming the file is 'login.js'\n// const { bookTour } = new URL('stripe', import.meta.url);\n\n// DOM ELEMENTS\nconst mapbox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\n//values\n\n// delegation\nif (mapbox) {\n  const locations = JSON.parse(\n    document.getElementById('map').dataset.locations,\n  );\n  displayMap(locations);\n}\nif (loginForm)\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\n\nif (userDataForm)\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]); // the files is an array\n    console.log(form);\n    updateSettings(form, 'data');\n  });\n\nif (userPasswordForm)\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    document.querySelector('.btn--save-password').textContent = 'Updating ...';\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password',\n    );\n    document.querySelector('.btn--save-password').textContent = 'Save Password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n\nif (bookBtn)\n  bookBtn.addEventListener('click', async (e) => {\n    console.log(bookTour);\n    e.target.textContent = 'Processing...';\n    const tourId = e.target.dataset.tourId;\n    await bookTour(tourId);\n  });\n","export const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoiemFjc3VtbWVyczU3MyIsImEiOiJjbTRpc2s2aTkwMzZrMmpwdTkxZzNvYWI3In0.4X7JCibYW3F5Ve5NdNnPcw';\n  const map = new mapboxgl.Map({\n    container: 'map', // container ID\n    style: 'mapbox://styles/zacsummers573/cm4iuhbq401g801sl4fdu5f8b',\n    scrollZoom: false,\n    // style URL\n    // center: [-118.113491, 34.111745], // starting position [lng, lat]\n    // zoom: 9, // starting zoom\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    //Create market\n    const el = document.createElement('div');\n    el.className = 'marker';\n    // Add the market\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n    //add popup\n\n    new mapboxgl.Popup({ offset: 30 })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description} </p>`)\n      .addTo(map);\n\n    // Extend map bounds to include current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: { top: 200, bottom: 150, left: 100, right: 100 },\n  });\n};\n","/* eslint-disable */\n// const axios = require('axios');\nimport axios from 'axios';\n// const axios = new URL(axios, import.meta.url);\nimport { showAlert } from './alert';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? 'http://localhost:3000/api/v1/users/updateMyPassword'\n        : 'http://localhost:3000/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} updated successfully!`);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","//type is 'success' or 'error'\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n//type is success of error\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}>${msg}<div/>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 15000);\n};\n","// const axios = require('axios');\n// const axios = require('axios');\nconst axios = require('axios/dist/browser/axios.cjs');\n// const axios = new URL(axios, import.meta.url);\n\n// const stripe = stripe(\n//   'pk_test_51QbHtyIYailFodhPiPUKtc7IXKFBx98IB7tFJKEicYhZ20XKYImVY4qbK3EKvz8LOpN7a4WobKhBhZL6h0a7qQCH00kkj1kORH',\n// );\n\nexport const bookTour = async (tourId) => {\n  // 1) get checkout session\n  const session = await axios.get(\n    `https://localhost/api/v1/bookings/checkout-sessions/${tourId}`,\n  );\n  console.log(session);\n  // 2) Creat checkiout Form + Charge credit card\n};\n","//\n// const axios = new URL(axios, import.meta.url);\nimport axios from 'axios';\nimport { showAlert } from './alert';\n\nexport const login = async (email, password) => {\n  console.log(email, password);\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: 'http://localhost:3000/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n      // httpsAgent: new https.Agent({ rejectUnauthorized: false }), // Ignore SSL errors\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    console.log(err);\n    showAlert('error', err.response?.data?.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: 'http://localhost:3000/api/v1/users/logout',\n    });\n    if ((res.data.status = 'success')) location.reload(true); // true allows it to be reloaded from the server and not cache.\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n"],"names":[],"version":3,"file":"app.js.map","sourceRoot":"/"}